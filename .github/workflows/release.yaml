name: "Publish Release"
on:
  release:
    types: [published]
jobs:
  docker-build:
    runs-on: ubuntu-latest
    environment:
      name: k8s-operator
    container:
      image: public.ecr.aws/opsterio/go.1.17:with-aws-cli
    name: Docker Build
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: set Env
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo "LATE_IMG=public.ecr.aws/opsterio/opense arch-operator:latest" >> $GITHUB_ENV
      - name: Test env
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          echo "IMG=public.ecr.aws/opsterio/opensearch-operator:$RELEASE_VERSION" >> $GITHUB_ENV
      - name: Build and Push Release
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          cd opensearch-operator
          go version
          go env
          go get opensearch.opster.io/pkg/builders
          go get opensearch.opster.io/pkg/helpers
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/opsterio
          make docker-build
          make docker-push
          docker tag public.ecr.aws/opsterio/opensearch-operator:$RELEASE_VERSION public.ecr.aws/opsterio/opensearch-operator:latest
          docker push public.ecr.aws/opsterio/opensearch-operator:latest
      - name: Build and Push Release ARM64
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          cd opensearch-operator
          go version
          go env
          go get opensearch.opster.io/pkg/builders
          go get opensearch.opster.io/pkg/helpers
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/opsterio
          docker build -f  Dockerfile-ARM -t public.ecr.aws/opsterio/opensearch-operator:$RELEASE_VERSION-ARM
          docker push public.ecr.aws/opsterio/opensearch-operator:$RELEASE_VERSION-ARM
          docker tag public.ecr.aws/opsterio/opensearch-operator:$RELEASE_VERSION-ARM public.ecr.aws/opsterio/opensearch-operator:latest-ARM
          docker push public.ecr.aws/opsterio/opensearch-operator:latest-ARM